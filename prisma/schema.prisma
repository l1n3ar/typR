generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  firstName      String
  lastName       String
  email          String        @unique
  password       String?
  subscriptionId String?
  lastLogin      DateTime?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  createdBy      String?
  updatedBy      String?
  isActive       Boolean       @default(true)
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id])
}

model Subscription {
  id        String   @id @default(uuid())
  name      String
  value     String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?
  updatedBy String?
  isActive  Boolean  @default(true)
  users     User[]
}

enum Level {
  BASIC
  INTERMEDIATE
  ADVANCED
}

model Module {
  id          String       @id @default(uuid())
  name        String
  description String?
  level       Level        @default(BASIC)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  createdBy   String?
  updatedBy   String?
  isActive    Boolean      @default(true)
  lessonPlans LessonPlan[]
}

model LessonPlan {
  id        String   @id @default(uuid())
  title     String
  level     Level    @default(BASIC)
  isLocked  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?
  updatedBy String?
  isActive  Boolean  @default(true)
  moduleId  String
  lessons   Lesson[]
  module    Module   @relation(fields: [moduleId], references: [id])
}


enum LessonType {
  INSTRUCTIONAL
  PRACTICE
}

model Lesson {
  id           String     @id @default(uuid())
  name         String
  content      String
  level        Level      @default(BASIC)
  type         LessonType @default(PRACTICE)
  isLocked     Boolean    @default(false)
  lessonPlanId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  createdBy    String?
  updatedBy    String?
  isActive     Boolean    @default(true)
  lessonPlan   LessonPlan @relation(fields: [lessonPlanId], references: [id])
}
